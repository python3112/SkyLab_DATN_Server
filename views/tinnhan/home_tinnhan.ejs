<!DOCTYPE html>
<html>

<head>
  <title>
    <%= title %>
  </title>
  <link rel='stylesheet' href='../stylesheets/style_header.css' />
  <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <script src="https://kit.fontawesome.com/ae360af17e.js" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/js/bootstrap.bundle.min.js"></script>
  <link rel="stylesheet" href="../stylesheets/sidebar.css">
  <style>
    .message-container {
      width: 100%;
      display: flex;
    }

    /* phần csss tìm kiếm và check  */
    .search_and_check {
      width: 25%;
      height: 99%;
      margin-top: 10px;
      margin-left: 10px;
      margin-right: 10px;
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);

    }

    .search_mess {
      width: 95%;
      margin-left: 2.5%;
      height: 40px;
      margin-top: 10px;
      border-radius: 10px;


    }

    .search_mess input:focus {

      outline: none;
      border: none;

    }

    .btn_search {
      width: 20%;
      height: 100%;
      border: #F1F0F0;
      background-color: white;
    }

    .icon_btn {
      padding: 5px;
      border: none;
      border-right: 1px solid black;
    }

    .icon_btn:hover {
      padding: 10px;
    }

    .btn_all {
      border: none;
      border-radius: 20px;
      width: 45%;
      background-color: white;

    }

    .btn_not_seen {
      border: none;
      border-radius: 20px;
      width: 45%;
      background-color: white;

    }


    .item_chat {
      width: 95%;
      margin-top: 10px;
      background-color: white;
      align-self: center;
      margin-left: 2.5%;
      display: flex;
      align-items: center;
      border-radius: 15px;
      border: 1px solid #ddd;
      /* Thêm đường viền để tạo độ sâu */
      padding: 10px;
      margin-bottom: 10px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      /* Shadow mềm mại */
      transition: box-shadow 0.3s ease;

    }

    .item_chat:hover {
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
    }

    .item_chat:focus {
      padding: 10px;
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
    }

    .item_chat_contentMess {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      display: block;
      width: 80%;
      font-size: 12px;
      margin-left: 5px;


    }

    /* ////////// ////// */

    /* ///// chat .chat_frame */
    .chat_frame {
      width: 73%;
      border-radius: 10px;
      flex-direction: column;
      padding-top: 10px;
      padding-bottom: 10px;
      height: 650px;
      margin-top: 20px;
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
      background-color: white;
    }

    .header_chat_frame {
      margin-top: 10px;
      margin-left: 20px;
      width: 100%;
      height: 10%;
      border-bottom: 1px solid black;

    }

    .name_user_Chatframe {
      margin-left: 10px;
      font-size: 20px;
    }

    .body_chat_frame {
      width: 95%;
      margin-left: 2.5%;
      height: 80%;
      max-height: 80%;
      overflow-y: scroll;
      list-style-type: none
    }

    .bottom_chat_frame {
      width: 90%;
      /* Đảm bảo rằng phần bottom_chat_frame có chiều rộng 100% của chat_frame */
      margin-left: 20px;
      margin-right: 20px;
      /* Thêm padding để tạo khoảng cách giữa các phần tử bên trong */
      background-color: #f2f2f2;
      align-self: center;
      /* Màu nền */
    }

    /* CSS cho input và button trong bottom_chat_frame */
    .bottom_chat_frame input[type="text"] {
      width: calc(100% - 100px);
      /* Chiều rộng của input sẽ chiếm phần còn lại của chat_frame sau khi trừ đi kích thước của button */
      padding: 10px;
      /* Thêm padding cho input */
      border: 1px solid #ccc;
      /* Viền */
      border-radius: 5px;
      /* Bo tròn góc */
    }

    .bottom_chat_frame button {
      width: 100px;
      /* Độ rộng của button */
      margin-left: 10px;
      /* Khoảng cách giữa input và button */
    }

    .message_wrapper {
      display: flex;
      align-items: center;
      margin-top: 10px;
      margin-bottom: 10px;
      /* Khoảng cách giữa các tin nhắn */
    }



    /* ///////////////////////// */

    .message {
      border-radius: 10px;
      padding: 10px;
      margin-bottom: 10px;
    }



    .message img {
      max-width: 100%;
      border-radius: 10px;
    }

    .highlighted {
      border: 1px solid black;
      box-shadow: 0 0 2px rgba(0, 0, 0, 0.5);
      transition: box-shadow 0.3s ease;
      /* Thiết lập viền cho các nút được chọn */
    }

    .left-message {
      width: fit-content;
      padding: 10px;
      color: white;
      background-color: #ccc;
      /* Màu xám */
      max-width: 400px;
      margin-left: 10px;
      border-top-left-radius: 10px;
      border-top-right-radius: 10px;
      border-bottom-right-radius: 10px;

      word-wrap: break-word;

    }

    .right-message {
      width: fit-content;
      padding: 10px;
      color: white;
      background-color: #007bff;
      max-width: 400px;
      margin-left: auto;
      margin-right: 20px;
      border-top-right-radius: 10px;
      border-top-left-radius: 10px;
      border-bottom-left-radius: 10px;
      word-wrap: break-word;
    }



    .avata {
      border-radius: 50px;
      margin-top: 30px;
      width: 40px;
      height: 40px;
    
    }

 
  </style>
  <script src="https://www.gstatic.com/firebasejs/10.10.0/firebase-app-compat.js"></script>
  <script src="https://www.gstatic.com/firebasejs/10.10.0/firebase-firestore-compat.js"></script>
  <script src="https://www.gstatic.com/firebasejs/10.10.0/firebase-auth-compat.js"></script>

  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>


  <script>
    document.addEventListener('DOMContentLoaded', function () {
      // Gọi hàm highlightButton khi DOM đã được tải
      highlightButton('btn_all');


    });


    function handleKeyPress(event, idUser) {
      // Kiểm tra xem phím ấn là "Enter" và không phải là một ký tự nâng cao (như Ctrl, Shift, Alt)
      if (event.key === "Enter" && !event.shiftKey && !event.ctrlKey && !event.altKey) {
        sendMessage(idUser);
        event.preventDefault(); // Ngăn chặn hành động mặc định của phím "Enter" (như xuống dòng trong textarea)
      }
    }
    function highlightButton(buttonId) {
      var buttons = document.querySelectorAll('.check_chat button');
      // Chọn tất cả các nút trong phần check_chat

      buttons.forEach(function (btn) {
        btn.classList.remove('highlighted'); // Loại bỏ lớp 'highlighted' từ tất cả các nút
      });
      var button = document.querySelector('.' + buttonId);
      button.classList.add('highlighted');  // Thêm lớp 'highlighted' vào nút được nhấn
    }

    function item_chatOnclick(srcImg, nameAcc, idChat, idAccount) {
      var imgAvata = document.getElementById('img_avata_user_Chatframe');
      var nameUser = document.getElementById('name_user_Chatframe');
      if (srcImg == "") {

      } else {
        imgAvata.src = srcImg;
      }
      nameUser.innerHTML = nameAcc;
      window.data_ChatFrame(idChat, idAccount, srcImg)
    }
    function luuIdChat(idChat) {
      localStorage.clear()
      localStorage.setItem('selectedChatId', idChat);

    }

    function sendMessage(idUser) {
      const inputElement = document.getElementById('message_admin')
      const inputValue = inputElement.value;
      const id = localStorage.getItem('selectedChatId');
      if (id == undefined) {
        return;
      } else {
        if (inputValue) {
          window.sendMess(id, inputValue, idUser)
        } else {
          return;
        }

      }
    }


  </script>

  <script type="module">
    import { initializeApp } from 'https://www.gstatic.com/firebasejs/10.10.0/firebase-app.js'
    // If you enabled Analytics in your project, add the Firebase SDK for Google Analytics
    import { getAnalytics } from 'https://www.gstatic.com/firebasejs/10.10.0/firebase-analytics.js'

    // Add Firebase products that you want to use
    import { getAuth } from 'https://www.gstatic.com/firebasejs/10.10.0/firebase-auth.js'
    import { getDatabase, ref, push, set, onValue, equalTo, orderByChild, orderByKey, query } from 'https://www.gstatic.com/firebasejs/10.10.0/firebase-database.js'
    const firebaseConfig = {
      apiKey: "AIzaSyAQTaVbsAvnb1KWVl1HlhoOum8YwcbEbZE",
      authDomain: "skylap-md03.firebaseapp.com",
      databaseURL: "https://skylap-md03-default-rtdb.asia-southeast1.firebasedatabase.app",
      projectId: "skylap-md03",
      storageBucket: "skylap-md03.appspot.com",
      messagingSenderId: "206926809191",
      appId: "1:206926809191:web:e8dc6a3da11ea129b4ecc2",
      measurementId: "G-TSY3SXB2F5"
    };
    // Initialize Firebase
    const app = initializeApp(firebaseConfig);
    const database = getDatabase(app);
    const data = ref(database, '/Chat');

    window.data_ChatFrame = function (idChat, idAccount, srcImg) {
      const body_chat_frame = document.getElementById('body_chat_frame');
      const dataMess = ref(database, '/messages');
      const querymess = query(dataMess, orderByChild('idChat'), equalTo(idChat))
      onValue(querymess, (snapshot) => {
        const messagesArray = snapshot.val(); // Lấy giá trị trả về từ snapshot
        if (messagesArray) {
          body_chat_frame.removeChild(body_chat_frame.firstChild);
          const messageContainer = document.createElement('div');
          messageContainer.classList.add('item_message_frame');
          const messages = Object.values(messagesArray);
          messages.forEach(message => {
            console.log(message);
            const messageWrapper = document.createElement('div');
            messageWrapper.classList.add('message_wrapper') // Tạo một div mới để bao gồm mỗi cặp img và message
            const messageElement = document.createElement('div');
            const imgElement = document.createElement('img');
            messageElement.innerText = message.content;
            if (message.idAccount === idAccount) {
              if (srcImg == "") {
                imgElement.classList.add('avata');
                messageElement.classList.add('left-message');
                imgElement.src = 'https://cdn-icons-png.flaticon.com/128/3135/3135715.png';
              } else {
                imgElement.classList.add('avata');
                messageElement.classList.add('left-message');
                imgElement.src = srcImg;
              }
            } else {

              messageElement.classList.add('right-message');
             
             

              // Thêm img vào div mới

            }



            messageWrapper.appendChild(imgElement); // Thêm img vào div mới
            messageWrapper.appendChild(messageElement); // Thêm message vào div mới
            messageContainer.appendChild(messageWrapper); // Thêm div mới vào container chứa tin nhắn
          });
          body_chat_frame.appendChild(messageContainer);
        } else {
          console.log('No messages found');
        }

        body_chat_frame.scrollTop = body_chat_frame.scrollHeight;
      });
    }

    function formartTime() {
      var currentTimeMillis = Date.now();

      // Tạo một đối tượng Date từ số miligiây
      var currentTime = new Date(currentTimeMillis);

      // Chuyển múi giờ từ UTC sang múi giờ Việt Nam (GMT+7)
      var vietnamTime = new Date(currentTime.getTime()); // Thêm 7 giờ (7*60*60*1000 miligiây)

      // Lấy ngày, tháng, năm
      var day = vietnamTime.getDate();
      var month = vietnamTime.getMonth() + 1; // Lưu ý: Tháng bắt đầu từ 0
      var year = vietnamTime.getFullYear();

      // Lấy giờ, phút, giây
      var hours = vietnamTime.getHours();
      var minutes = vietnamTime.getMinutes();
      var seconds = vietnamTime.getSeconds();

      // Định dạng lại chuỗi ngày-tháng-năm giờ-phút-giây
      var formattedDateTime = `${day < 10 ? '0' : ''}${day}-${month < 10 ? '0' : ''}${month}-${year} ${hours < 10 ? '0' : ''}${hours}:${minutes < 10 ? '0' : ''}${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;
      return formattedDateTime
    }

    window.sendMess = function (idChat, content, idUser) {

      const dataMess = ref(database, '/messages');
      const newMessageRef = push(dataMess);

      // Lấy key của tin nhắn mới tạo
      const messageId = newMessageRef.key;
      set(newMessageRef, {
        Daxem: false,
        ThuHoi: false,
        content: content,
        id: messageId,
        idChat: idChat,
        idAccount: idUser.toString(),
        thoiGian: formartTime()
        // Gán id chat cho tin nhắn
      }).then(() => {
        console.log("Tin nhắn đã được gửi thành công.");
        document.getElementById('message_admin').value = '';
      }).catch((error) => {
        console.error("Gửi tin nhắn thất bại: ", error);
      });
    }

    

  </script>

</head>

<body>
  <div class="wrapper">
    <%- include('../inc/sidebar') %>
      <div class="main">
        <%- include('../inc/header') %>
          <div class="message-container">

            <div class="search_and_check">

              <div class="list_chat" style="max-height: max-content; width: 100%; overflow-y: scroll;">
                <% if (listAccounts==null) { %>

                  <% } else { %>
                    <% listAccounts.forEach(account=> { %>
                      <% listMess.forEach(message=> { %>
                        <% if (account) { %>
                          <% if (message.idAccount==account._id ) { %>
                            <div class="item_chat"
                              onclick="item_chatOnclick('<%= account.avatar %>', '<%= account.taiKhoan %>', '<%= message.idChat %>' ,'<%= account._id %>'  , luuIdChat('<%= message.idChat %>') )">
                              <% if (account.avatar) { %>
                                <img style="border-radius: 30px; margin-left: 10px;" width="50" height="50"
                                  src="<%= account.avatar %>">
                                <% } else { %>
                                  <img style="border-radius: 30px; margin-left: 10px;" width="50" height="50"
                                    src="https://cdn-icons-png.flaticon.com/128/3135/3135715.png">
                                  <% } %>
                                    <div style="margin-left: 10px; margin-top: 5px; width: 90%;">
                                      <% if (account.taiKhoan) { %>
                                        <p style="margin-left: 5px; font-weight: bolder;">
                                          <%= account.taiKhoan %>
                                        </p>
                                        <% } %>
                                          <% if (message.idAccount==account._id) { %>
                                            <p class="item_chat_contentMess">
                                              Tin Nhắn : <%= message.content %>
                                            </p>
                                            <% } %>

                                    </div>
                            </div>
                            <% } %>
                              <% } %>
                                <% }); %>
                                  <% }); %>
                                    <% } %>



              </div>
            </div>
            <div id="chat_frame" class="chat_frame">
              <div id="header_chat_frame" class="header_chat_frame">
                <img id="img_avata_user_Chatframe" src="https://cdn-icons-png.flaticon.com/128/3135/3135715.png"
                  width="55" height="55" alt="" srcset="">
                <strong id="name_user_Chatframe" class="name_user_Chatframe">Vũ Huy Hoàng</strong>
              </div>
              <div id="body_chat_frame" class="body_chat_frame">
              </div>
              <div id="bottom_chat_frame" class="bottom_chat_frame">
                <div class="input-group mb-3">
                  <input type="text" class="form-control " onkeypress="handleKeyPress(event ,'<%= user._id %>')"
                    id="message_admin" placeholder="Trả lời tin nhắn người dùng " aria-label="Recipient's username"
                    aria-describedby="button-addon2">
                  <button class="btn btn-outline-secondary" type="button" onclick="sendMessage('<%= user._id %>')"
                    id="button-addon2">Send</button>
                </div>
              </div>

            </div>


          </div>




          <%- include('../inc/footer') %>
      </div>
  </div>






</body>


</html>